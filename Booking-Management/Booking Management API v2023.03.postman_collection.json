{
	"info": {
		"_postman_id": "737584f8-82ed-474c-8cf9-71d15eeba609",
		"name": "Booking Management API v2023.03",
		"description": "Hello!\r\n\r\nThis postman collection is meant to simplify integration process for customers who wish to implement Sabre Booking Management API - https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management\r\n\r\nPlease read our extensive documentation in the above link, which will provide details on all of the methods exposed by this API\r\n\r\nFYI - the new service method: 'modifyBooking' is currently published as BETA and documented at \r\nhttps://developer.sabre.com/docs/rest_apis/trip/orders/booking_management_beta\r\n\r\nThanks and regards!\r\n\r\nBooking Management API - Dev and Product Team",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "SessionCreateRQ (Stateful ATH) create session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate a unique ID for profile services\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid();\r",
									"console.log(myUUID);\r",
									"\r",
									"//cleanup\r",
									"pm.environment.unset('filterName')\r",
									"pm.environment.unset('profileName')\r",
									"\r",
									"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
									"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
									"\r",
									"console.log(pm.environment.get('filterName'))\r",
									"console.log(pm.environment.get('profileName'))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
						},
						"url": {
							"raw": "{{soap_endpoint}}",
							"host": [
								"{{soap_endpoint}}"
							]
						},
						"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
					},
					"response": []
				},
				{
					"name": "REST Authorize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic {{secret}}",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=client_credentials"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v2/auth/token",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v2",
								"auth",
								"token"
							]
						},
						"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Booking",
			"item": [
				{
					"name": "GetBooking /v1 General",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\"\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Flights",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n  \"returnOnly\":\r\n  [\"FLIGHTS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Flights And Hotels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n  \"returnOnly\":\r\n  [\"FLIGHTS\", \"HOTELS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Cars",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n  \"returnOnly\": [\"CARS\", \"CREATION_DETAILS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel Booking",
			"item": [
				{
					"name": "Cancel Booking /v1 Cancel All",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All + Change PCC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"targetPcc\": \"{{pcc}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"confirmationId\": \"{{pnr}}\",\n  \"bookingSource\": \"SABRE\",\n  \"retrieveBooking\": false,\n  \"cancelAll\": false,\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n  \"flights\": [\n    {\n      \"itemId\": 9\n    }\n  ]\n \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Hotels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": false,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"hotels\": [\n        {\n            \"itemId\": 42\n        },\n                {\n            \"itemId\": 43\n        },\n                {\n            \"itemId\": 44\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights, Hotels, Cars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"cars\": [\r\n        {\r\n            \"itemId\": 77\r\n        }\r\n    ],\r\n    \"flights\": [\r\n        {\r\n            \"itemId\": 2\r\n        },\r\n        {\r\n            \"itemId\": 3\r\n        },\r\n        {\r\n            \"itemId\": 4\r\n        },\r\n        {\r\n            \"itemId\": 88\r\n        }\r\n    ],\r\n    \"hotels\": [\r\n        {\r\n            \"itemId\": 25\r\n        },\r\n        {\r\n            \"itemId\": 220\r\n        }\r\n    ]\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Sequence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"segments\": [\r\n        {\r\n            \"sequence\": 1\r\n        },\r\n        {\r\n            \"sequence\": 3\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"segments\": [\r\n        {\r\n            \"id\": 38\r\n        },\r\n        {\r\n            \"id\": 26\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel Flights and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": false,\n    \"cancelAll\": false,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"flights\": [\n        {\n            \"itemId\": 25\n        },\n        {\n            \"itemId\": 26\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel NDC order by means of a void or refund offer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"retrieveBooking\": true,\n    \"offerItemId\": \"cb7778589bcbklg7tkkp8sdo50\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel Flight Tickets (Check/Void/Refund)",
			"item": [
				{
					"name": "Check Flight Tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"6077531617197\"\n      },\n      {\n        \"number\": \"6077531617198\"\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Check Flight Tickets with refundQualifiers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"6077531617197\",\n        \"refundQualifiers\": {\n            \"commissionPercent\": \"5.00\"\n        }\n      },\n      {\n        \"number\": \"6077531617198\",\n        \"refundQualifiers\": {\n            \"overrideCancelFee\": \"100.00\"\n        }\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Check Flight Tickets for a confirmationId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"1SXXXCITUW8P4\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - with ALLOW_PARTIAL_CANCEL policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n    \"6071237616558\",\n    \"6074567616559\",\n    \"6077897616560\"\n  ],\n  \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - with HALT_ON_ERROR policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"tickets\": [\n    \"6077531617197\",\n    \"6077531617198\",\n    \"6077531617199\"\n  ],\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - Change PCC",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"targetPcc\": \"{{pcc}}\",\n  \"tickets\": [\n    \"6077531617197\",\n    \"6077531617198\",\n    \"6077531617199\"\n  ],\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Refund Flight Tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"6077531617197\"\n      },\n      {\n        \"number\": \"6077531617198\"\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"refundFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Refund Flight Tickets with refundQualifiers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"6077531617197\",\n        \"refundQualifiers\": {\n            \"commissionPercent\": \"5.00\"\n        }\n      },\n      {\n        \"number\": \"6077531617198\",\n        \"refundQualifiers\": {\n            \"overrideCancelFee\": \"100.00\"\n        }\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"refundFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Create Booking",
			"item": [
				{
					"name": "Flights - NDC/ATPCO/LCC",
					"item": [
						{
							"name": "Flights Preparation",
							"item": [
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC MultiplePax",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"1\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc_tkt}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"SYD\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"MEL\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 1\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC QF",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"QF\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) LCC FR",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"7KFA\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"STN\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"FR\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC AA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"NYC\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"NYC\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"AA\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC UA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"G7HE\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"NYC\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"ORD\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ORD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"NYC\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"UA\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC SQ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"SQ\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - ATPCO",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"AUH\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"EY\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - ATPCO 2 Passengers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "conversation-id-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"AUH\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"EY\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - Air NDC  with ProfileName",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"profiles\": [\n\t\t{\n\t\t\t\"profileName\": \"{{profileName}}\",\n\t\t\t\"profileTypeCode\": \"TVL\",\n\t\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC  with ProfileId",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC Payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n\t\t\t\"customerNumber\": \"1234567\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with ProfileId",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n\t\t},\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with Profile filter",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n\t\t},\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with pricing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with seats",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"travelerIndex\": \"1\",\n                        \"number\": \"20C\"\n                    },\n                    {\n                        \"travelerIndex\": \"3\",\n                        \"number\": \"20D\"\n                    }\n                ]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                                \"seats\": [\n                    {\n                        \"travelerIndex\": \"1\",\n                        \"number\": \"19C\"\n                    },\n                    {\n                        \"travelerIndex\": \"3\",\n                        \"number\": \"19D\"\n                    }\n                ]\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with pricing and FOP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n            \"qualifiers\": {\n                \"payment\": {\n                    \"primaryFormOfPayment\": 1\n                }\n            }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4005111111111136\",\n                \"expiryDate\": \"2024-07\"\n            }\n        ]\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air no pricing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with custom haltOnStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n        \"haltOnFlightStatusCodes\": [\"NN\"],\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with multi pricing (per flight)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"CNN\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\",\n            \"flightIndices\": [1]\n        }\n        },\n                {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\",\n            \"flightIndices\": [2]\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with price comparison",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"CNN\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n            \"priceComparisons\": [\n                {\n                    \"desiredAmount\": \"5300.00\",\n                    \"comparisonType\": \"INCREASE_BY_AMOUNT\",\n                    \"amount\": \"30.00\"\n                },\n                                {\n                    \"desiredAmount\": \"5300.00\",\n                    \"comparisonType\": \"DECREASE_BY_AMOUNT\",\n                    \"amount\": \"30.00\"\n                }\n            ]\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with identity documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\"\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with remarks and other services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": 463,\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"MEL\",\n                \"toAirportCode\": \"AUH\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"16:15\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": 460,\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"AUH\",\n                \"toAirportCode\": \"MEL\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"21:45\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"validatingAirlineCode\": \"EY\"\n                }\n            }\n        ]\n    },\n    \"remarks\": [\n        {\n            \"type\": \"GENERAL\",\n            \"text\": \"TEST REMARK\"\n        }\n    ],\n    \"otherServices\": [\n        {\n            \"airlineCode\": \"EY\",\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"TEST OTHER SERVICE\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with loyaltyPrograms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                \"supplierCode\": \"LO\",\n                \"programNumber\": \"992001557133700\",\n                \"tierLevel\": \"1\",\n                \"receiverCode\": \"LO\"\n              }\n            ]\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n                        \"loyaltyPrograms\": [\n              {\n                \"supplierCode\": \"AA\",\n                \"programNumber\": \"ZZZZZZ\",\n                \"tierLevel\": \"1\",\n                \"receiverCode\": \"AA\"\n              }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with loyaltyPrograms + pricing qualifiers + Credit card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Infant\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2020-01-23\",\n            \"passengerCode\": \"INF\"\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\"\n         }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+48666555444\"\n        ]\n    },\n    \"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 461,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"22:25\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 460,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"21:45\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"commissionPercentage\": \"10.00\",\n                    \"payment\": {\n                        \"primaryFormOfPayment\": 1\n                    }\n                }\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4537156488578956\",\n                \"expiryDate\": \"2024-07\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with Changed PCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"targetPcc\": \"{{pcc}}\",\n     \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirline\": \"EY\"\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Passive Air segment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"YK\",\n                \"confirmationId\": \"ABC123\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"YK\",\n                \"confirmationId\": \"ABC123\"\n\t\t\t}\n\t\t]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air LCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2020-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 2437,\n\t\t\t\t\"airlineCode\": \"FR\",\n\t\t\t\t\"fromAirportCode\": \"KRK\",\n\t\t\t\t\"toAirportCode\": \"STN\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"21:45\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Ancillaries baggage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Smith\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\",\n      \"ancillaries\": [\n        {\n          \"reasonForIssuance\": \"BAGGAGE\",\n          \"subcode\": \"0C2\",\n          \"airlineCode\": \"EY\",\n          \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n          \"basePrice\": \"528.00\",\n          \"currencyCode\": \"USD\",\n          \"groupCode\": \"BG\",\n          \"flightIndices\": [\n            1\n          ]\n        },\n        {\n          \"reasonForIssuance\": \"BAGGAGE\",\n          \"subcode\": \"0C4\",\n          \"airlineCode\": \"EY\",\n          \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n          \"basePrice\": \"656.00\",\n          \"currencyCode\": \"USD\",\n          \"groupCode\": \"BG\",\n          \"flightIndices\": [\n            1\n          ]\n        }\n      ]\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Smith\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n      {\n        \"flightNumber\": 78,\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AMS\",\n        \"toAirportCode\": \"AUH\",\n        \"departureDate\": \"2021-11-19\",\n        \"departureTime\": \"20:25\",\n        \"bookingClass\": \"V\",\n        \"flightStatusCode\": \"NN\"\n      },\n      {\n        \"flightNumber\": 77,\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AUH\",\n        \"toAirportCode\": \"AMS\",\n        \"departureDate\": \"2021-11-26\",\n        \"departureTime\": \"09:00\",\n        \"bookingClass\": \"V\",\n        \"flightStatusCode\": \"NN\"\n      }\n    ],\n    \"flightPricing\": [\n      {}\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Ancillaries baggage with SSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Smith\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\",\n      \"ancillaries\": [\n                {\n                    \"reasonForIssuanceCode\": \"C\",\n                    \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n                    \"reasonForIssuanceName\": \"BAGGAGE\",\n                    \"subcode\": \"0CC\",\n                    \"airlineCode\": \"LH\",\n                    \"groupCode\": \"BG\",\n                    \"basePrice\": \"35.00\",\n                    \"currencyCode\": \"USD\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n      ],\n      \"specialServices\": [\n          {\n              \"code\": \"FBAG\"\n          }\n      ]\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Smith\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n    {\n        \"flightNumber\": 809,\n        \"airlineCode\": \"LH\",\n        \"fromAirportCode\": \"ARN\",\n        \"toAirportCode\": \"FRA\",\n        \"departureDate\": \"2021-11-20\",\n        \"departureTime\": \"06:15\",\n        \"bookingClass\": \"Y\",\n        \"flightStatusCode\": \"NN\"\n    }\n    ],\n    \"flightPricing\": [\n      {}\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "CSL Hotel",
					"item": [
						{
							"name": "Hotel Preparation",
							"item": [
								{
									"name": "GetHotelAvailRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <RatePlanCandidates >\r\n                <RatePlanCandidate RatePlanCode=\"AMX\"/>\r\n            </RatePlanCandidates>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ 5 CC 19 IATA  30 CORP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n          <HotelRef HotelCode=\"100035516\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ with 2 ADT 1 CNN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" Children=\"1\">\r\n                <ChildAges>3</ChildAges>\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ 29 COMP",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n          <HotelRef HotelCode=\"100672324\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"2021-07-29\" EndDate=\"2021-08-02\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ 18 AgencyName",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n          <HotelRef HotelCode=\"100070302\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"2021-07-29\" EndDate=\"2021-08-02\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('bookingKey', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rateKey}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - CSL hotel with payment card",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Ann\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"INS\",\n      \"age\": 3\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"hotel\": {\n    \"useCsl\": true,\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": true,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"travelerIndices\": [\n          1,2,3\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2022-10\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"john@smith.family.priv\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - CSL hotel with profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profiles\": [\n    {\n      \"uniqueId\": \"{{profileId}}\",\n      \"profileTypeCode\": \"TVL\",\n      \"domainId\": \"{{pcc}}\"\n    }\n  ],\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    }\n  },\n  \"hotel\": {\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"rooms\": [\n      {\n        \"travelerIndices\": [\n          1\n        ]\n      }\n    ],\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2022-10\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"john@smith.family.priv\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - CSL hotel with profile + Strong Customer Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"useCsl\": true,\n        \"bookingKey\": \"{{bookingKey}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2022-10\",\n                \"authentications\": [\n                    {\n                        \"secureTransactionId\": \"ABCDEFGHI123456789012!.1234567890123\",\n                        \"issuesCode\": \"AO\",\n                        \"channelCode\": \"SC\",\n                        \"resultCode\": \"OK\",\n                        \"electronicCommerceIndicator\": \"AB\",\n                        \"cardNumberCollectionCode\": \"K\",\n                        \"exemptionTypeCode\": \"EC\",\n                        \"mandateTypeCode\": \"NS\",\n                        \"originalPaymentReference\": \"1234547839012345\",\n                        \"merchantName\": \"TEST CREDIT CARD\",\n                        \"secureAuthenticationValue\": \"ABC123455533533444455555678\",\n                        \"updatedDateTime\": \"2019-08-19T09:35:10\",\n                        \"amount\": \"1234.56\",\n                        \"currencyCode\": \"USD\",\n                        \"version\": \"120\",\n                        \"verificationResultCode\": \"PASS\",\n                        \"tokenAuthenticationValue\": \"ABC3434334343556677487312567\"\n                    }\n                ],\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"VIRTUAL_CARD\",\n                \"virtualCard\": {\n                    \"customerAccountCode\": \"John\",\n                    \"agencyEmail\": \"john@smith.family.priv\",\n                    \"hotelFax\": \"john@smith.family.priv\",\n                    \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n                    \"roomType\": \"2 double beds\",\n                    \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n                    \"rateAmount\": {\n                        \"amount\": \"100.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"virtualCardCharges\": [\n                        \"Breakfast\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"AGENCY_NAME\",\n                \"agencyAddress\": {\n                    \"name\": \"John Smith\",\n                    \"street\": \"1230 Ellen Ave, apt 10\",\n                    \"city\": \"Dallas\",\n                    \"stateProvince\": \"TX\",\n                    \"postalCode\": \"75063\",\n                    \"countryCode\": \"US\"\n                }\n            },\n            {\n                \"type\": \"AGENCY_IATA\",\n                \"agencyIataNumber\": \"129345738\"\n            },\n            {\n                \"type\": \"CORPORATE\",\n                \"corporateId\": \"CC006\"\n            },\n            {\n                \"type\": \"COMPANY_NAME\",\n                \"companyAddress\": {\n                    \"name\": \"John Smith\",\n                    \"street\": \"1230 Ellen Ave, apt 10\",\n                    \"city\": \"Dallas\",\n                    \"stateProvince\": \"TX\",\n                    \"postalCode\": \"75063\",\n                    \"countryCode\": \"US\"\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Air with CSL hotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"hotel\": {\n    \"useCSL\": true,\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": false,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"roomExtras\": [\n          {\n            \"roomExtraType\": 26,\n            \"quantity\": 1,\n            \"amount\": \"100.00\"\n          }\n        ],\n        \"travelerIndices\": [\n          1\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 3\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"All\",\n      \"surname\": \"Mrozicki\",\n      \"birthDate\": \"2000-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n      {\n        \"flightNumber\": 463,\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"MEL\",\n        \"toAirportCode\": \"AUH\",\n        \"departureDate\": \"2021-10-20\",\n        \"departureTime\": \"16:15\",\n        \"bookingClass\": \"Y\",\n        \"marriageGroup\": false,\n        \"flightStatusCode\": \"NN\"\n      },\n      {\n        \"flightNumber\": 460,\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AUH\",\n        \"toAirportCode\": \"MEL\",\n        \"departureDate\": \"2021-10-27\",\n        \"departureTime\": \"21:45\",\n        \"bookingClass\": \"Y\",\n        \"marriageGroup\": false,\n        \"flightStatusCode\": \"NN\"\n      }\n    ],\n    \"flightPricing\": [\n      {\n        \"qualifiers\": {\n          \"payment\": {\n            \"primaryFormOfPayment\": 1,\n            \"secondaryFormOfPayment\": 3,\n            \"amountOnSecondFormOfPayment\": \"100.00\"\n          }\n        }\n      }\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    },\n    \"formsOfPayment\": [\n      {\n        \"type\": \"CASH\"\n      },\n      {\n        \"type\": \"CHECK\"\n      },\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2022-10\",\n        \"manualApproval\": {\n          \"code\": \"X05285\",\n          \"airlineCode\": \"AA\",\n          \"requestDateTime\": \"2017-08-14T01:11:11\",\n          \"expiryDateTime\": \"2022-08-14T01:11:11\",\n          \"amount\": \"684.00\",\n          \"currencyCode\": \"USD\"\n        },\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"MISCELLANEOUS\",\n        \"miscellaneousCreditCode\": \"PL189947\",\n        \"extendedPayment\": 12,\n        \"boardingTaxAmount\": \"100.00\"\n      },\n      {\n        \"type\": \"INSTALLMENTS\",\n        \"numberOfInstallments\": 90,\n        \"airlinePlanCode\": \"RG065\",\n        \"installmentAmount\": \"100\",\n        \"netBalance\": \"300.20\"\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"john@smith.family.priv\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "Vehicle",
					"item": [
						{
							"name": "Vehicle preparation",
							"item": [
								{
									"name": "GetVehAvailRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;\r",
													"    // const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].ConvertedVehRentalRate[0].$.RateKey;\r",
													"    pm.environment.set('carRateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Car Rate Key : \"+pm.environment.get('carRateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"DFW\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetVehAvailRQ 2.0.0 - Different pick up from return Copy 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{short_end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"MIA\"/>\r\n            <ReturnLocation LocationCode=\"MCO\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/soap_apis/car/search/get_vehicle_availability), [Resources](https://developer.sabre.com/docs/soap_apis/car/search/get_vehicle_availability/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "VehPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('carBookingKey', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Car Booking Key : \"+pm.environment.get('carBookingKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<VehPriceCheckRQ xmlns=\"http://services.sabre.com/car/pricecheck/v1_0_0\" version=\"1.0.0\">\r\n    <VehRateInfoRef RateKey=\"{{carRateKey}}\"/>\r\n</VehPriceCheckRQ>\r\n\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - simple vehicle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 11\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"car\": {\n    \"bookingKey\": \"{{carBookingKey}}\"\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2022-10\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Collection Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"collectionAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\"\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2022-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Delivery Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"deliveryAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\"\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2022-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Delivery Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"deliverySite\": {\n            \"id\": \"ABC123\",\n            \"name\": \"TEST LOCATION\",\n            \"phone\": \"8175551212\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\",\n        \"flightIndex\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2022-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Collection Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"collectionAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"collectionSite\": {\n            \"id\": \"ABC123\",\n            \"name\": \"TEST LOCATION\",\n            \"phone\": \"8175551212\"\n        },\n        \"payment\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"4487971000000006\",\n                    \"cardSecurityCode\": \"123\",\n                    \"expiryDate\": \"2022-10\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    }"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ModifyBooking",
			"item": [
				{
					"name": "CSL hotel modification flows",
					"item": [
						{
							"name": "modify common fields",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"P\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"LOYALTY_ID\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify checkin/checkout dates",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rate_key = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rate_key);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2022-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{modifiedStartDate}}\",\n                \"checkOutDate\": \"{{modifiedEndDate}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 1\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"{{$randomInt}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const moment = require('moment');",
											"",
											"let startDate = pm.environment.get(\"start_date\");",
											"let endDate = pm.environment.get(\"end_date\");",
											"",
											"let modifiedStartDate = moment(startDate)",
											"    .add(1, 'days')",
											"    .format('YYYY-MM-DD');",
											"",
											"let modifiedEndDate = moment(endDate)",
											"    .subtract(1, 'days')",
											"    .format('YYYY-MM-DD');",
											"",
											"postman.setEnvironmentVariable(\"modifiedStartDate\", modifiedStartDate);",
											"postman.setEnvironmentVariable(\"modifiedEndDate\", modifiedEndDate);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.clearEnvironmentVariable(\"modifiedStartDate\");",
											"postman.clearEnvironmentVariable(\"modifiedEndDate\");"
										]
									}
								}
							]
						},
						{
							"name": "modify number of guests",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"DFW\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas for 2 guests",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\">\r\n                </Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"9asxwctlYws9EiTc9xdSerqGTg4IG8ZV1n3Q31GriRx1PKRr/VPeqdlg5kIt3xU3lYzCbS/WAvlsr41LMsWtkp7VcVF0Js7oJBWpu0PBfp1CKtnIfPrFfKyVh52fx5SH16/olYCRGqYopsFpoCWM/osQoFMIhh9tA/ljJ9eezsNbT3H1lHGjRhzaAIiwk7et2mnDOe9qwzsoX25MA6MMxFA4/lFufr22fzBcGWhLto4CTa/dHakI9bmaF9Xu6BzLvr5b33lgJN1fQyDccXlo5izrjREch/TSz+lK6clOzLPIODgYsIb7tqcMYbNtnw0th7A8DuwMAg6TiawwN+hveeTMm28PLbAlGKNU9drl8xUqYu+WksXJraodZn4EFWLFars37nXAL7vRVGawVZOVJLnIcXWZc5FTc2BbaCjvcdvuARllsbd7uETV5Il4nYEfXsQtBJIJ+Oq4wWchvUY4+5E+VLozhPRsnU153Bkckw4b+3K6cikcQ1yQTW+bUVXBCGGxydiJS+ryV9xo8fCravPW2XLFomeWUjPyevbBHGR6UwDDpBcJcFUasPdiFLKt+gznwVmkNwkRheutHOySkg==\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"bookingKey\": \"{{booking_key}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"P\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"LOYALTY_ID\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify lead guest",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify FoP change CC",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {}\n    ,\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"4111111111111111\",\n                    \"cardSecurityCode\": \"123\",\n                    \"expiryDate\": \"2023-10\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify FoP LATE to CC",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel that allow LATE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n\t\t\t<HotelRef HotelCode=\"100068656\" CodeContext=\"GLOBAL\"/>\r\n\t\t</HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"LATE\"\n    }\n    \n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {}\n    ,\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ]\n                },\n                \"numberOfGuests\": 1\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"4111111111111111\",\n                    \"cardSecurityCode\": \"123\",\n                    \"expiryDate\": \"2023-10\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify form of payment with 'before' section fulfilled",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);\r",
													"\r",
													"// get RQ and make a variable\r",
													"var req = request.data;\r",
													"// console.log(req.body);\r",
													"// console.log(request.data)\r",
													"\r",
													"postman.setEnvironmentVariable(\"request\", req);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- Booking Siganture\");\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{request}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"4111111111111111\",\n                    \"cardSecurityCode\": \"123\",\n                    \"expiryDate\": \"2023-10\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Flight modification flows",
					"item": [
						{
							"name": "data preparation",
							"item": [
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 0;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('flight_number', flightNumber);\r",
													"\r",
													"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirAvailLLSRQ  get return flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 1;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('return_flight_number', flightNumber);\r",
													"\r",
													"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"\r",
													"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "add infant",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking - throws error but works and  add infant",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Little\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"type\": \"INFANT\",\n                \"birthDate\": \"2022-01-01\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "delete infant",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Little\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"INF\",\n            \"type\": \"INFANT\",\n            \"birthDate\": \"2022-01-01\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "update traveler name and surname",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marta\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Rebecca\",\n                \"surname\": \"Miss\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "update traveler type is not permitted",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marta\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\"\n            },\n            {\n                \"givenName\": \"Marta\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "multiple changes update name + delete infant",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Little\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"INF\",\n            \"type\": \"INFANT\",\n            \"birthDate\": \"2022-01-01\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"Hammond\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "multiple changes update name + add infant",
							"item": [
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"4487971000000006\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"2023-10\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking - returns error but work",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"Hammond\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Little\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"type\": \"INFANT\",\n                \"birthDate\": \"2022-01-01\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "update name - not suported by the airline",
							"item": [
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 1;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('flight_number', flightNumber);\r",
													"\r",
													"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"assertions.assertThatSessionAuthenticationIsUsed();"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"16:55\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Nooo\",\n                \"surname\": \"HowaboutSurname\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'EY');",
											"pm.environment.set('from_airport_code', 'MEL');",
											"pm.environment.set('to_airport_code', 'AUH');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Add email",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\",\n                    \"john2@smith.family2.priv\",\n                    \"john3@smith.family3.priv\",\n                    \"firstAdded@smith.family.priv\",\n                    \"secondAdded@smith.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"asd@bbb.family.priv\",\n                    \"asd2@bbb.family.priv\",\n                    \"asd3@bbb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Update email",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\",\n                    \"john2@smith.family2.priv\",\n                    \"john3@smithUPDATE.family3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"UPDATE@bb.family.priv\",\n                    \"asd2@bbb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete email",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"asd2@bb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Add phone",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete phone",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"1-222-333-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "Update phone",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"1-222-333-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"1-443-211-9876\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-111-476-2451\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify DKNumber/agencyCustomerNumber",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC234\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "add DKNumber/agencyCustomerNumber",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC234\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "delete DKNumber/agencyCustomerNumber - not supported",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "G7RE"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "G7RE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "loyalty programs add - update - delete",
							"item": [
								{
									"name": "createBooking",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"JOHN\",\n            \"surname\": \"KOWALSKI\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133711\",\n                    \"tierLevel\": 1,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133722\",\n                    \"receiverCode\": \"LO\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"ELI\",\n            \"surname\": \"KOWALSKI\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133733\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133744\",\n                    \"receiverCode\": \"OM\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"KOWALSKI\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133712\",\n                        \"tierLevel\": 1,\n                        \"receiverCode\": \"AA\"\n                    },\n                    {\n                        \"supplierCode\": \"OM\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133722\",\n                        \"receiverCode\": \"OM\"\n                    },\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133732\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"ELI\",\n                \"surname\": \"KOWALSKI\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133733\",\n                        \"tierLevel\": 13,\n                        \"receiverCode\": \"AA\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('airline_code', 'AA');",
									"pm.environment.set('from_airport_code', 'DFW');",
									"pm.environment.set('to_airport_code', 'LAX');",
									"",
									"console.log(\"airlineCode : \"+pm.environment.get('airline_code'));",
									"console.log(\"from_airport_code : \"+pm.environment.get('from_airport_code'));",
									"console.log(\"to_airport_code : \"+pm.environment.get('to_airport_code'));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Group booking modification flows",
					"item": [
						{
							"name": "data preparation (flight)",
							"item": [
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 0;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('flight_number', flightNumber);\r",
													"\r",
													"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Add (ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"emails\": [\n                    \"JOHNGRACZYK@SMITH.FAMILY.PRIV\",\n                    \"JOHN222@SMITH.FAMILY.PRIV\"\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"DOE\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"JACK\",\n                \"surname\": \"BROWN\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"BILL\",\n                \"surname\": \"BROWN\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update (Name ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"BILL\",\n                \"surname\": \"BROWN\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"emails\": [\n                    \"JOHNGRACZYK@SMITH.FAMILY.PRIV\",\n                    \"JOHN222@SMITH.FAMILY.PRIV\"\n                ]\n            },\n            {\n                \"givenName\": \"JACK\",\n                \"surname\": \"BROWN\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update (Type ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete (ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Sabre-Group",
												"type": "text",
												"value": "U9PK"
											},
											{
												"key": "X-Sabre-Current-City",
												"type": "text",
												"value": "U9PK"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('airline_code', 'BA');",
									"pm.environment.set('from_airport_code', 'CDG');",
									"pm.environment.set('to_airport_code', 'LHR');",
									"",
									"console.log(\"airlineCode : \"+pm.environment.get('airline_code'));",
									"console.log(\"from_airport_code : \"+pm.environment.get('from_airport_code'));",
									"console.log(\"to_airport_code : \"+pm.environment.get('to_airport_code'));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const isGetBookingRequest = pm.request.url.toString().includes(\"trip/orders/getBooking\");",
							"",
							"if (!isGetBookingRequest) {",
							"    return;",
							"}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"console.log(jsonData.bookingSignature);",
							"pm.variables.set(\"bookingSignature\", jsonData.bookingSignature);"
						]
					}
				}
			]
		},
		{
			"name": "Workflows",
			"item": [
				{
					"name": "1 - Air NDC Shop, Price Check, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"1\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"RPH\": \"2\",\n\t\t\t\t\"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 10\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/resources)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Offers Price /v1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}\n"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/book/offer_price), [Resources](https://developer.sabre.com/docs/rest_apis/air/book/offer_price/resources)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n\t\t\t\"customerNumber\": \"1234567\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "4. GetBooking /v1 General",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"TADPGN\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					]
				},
				{
					"name": "2 - Profiles, Air NDC Shop, Price Check, Book, Cancel",
					"item": [
						{
							"name": "0 - Create Profile",
							"item": [
								{
									"name": "SessionCreateRQ (Stateful ATH) create session and prepare vars Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Generate a unique ID for profile services\r",
													"var uuid = require('uuid');\r",
													"var myUUID = uuid();\r",
													"console.log(myUUID);\r",
													"\r",
													"//cleanup\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')\r",
													"\r",
													"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
													"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
													"\r",
													"console.log(pm.environment.get('filterName'))\r",
													"console.log(pm.environment.get('profileName'))\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Filter[0].$.FilterID;\r",
													"    pm.environment.set('filterId', filterId);\r",
													"});\r",
													"\r",
													"console.log(\"Filter id : \"+pm.environment.get('filterId'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('filterId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Filter CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\" FilterID=\"*\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" FilterName=\"{{filterName}}\" FilterTypeCode=\"TVL\">\r\n\t\t<Profile>\r\n\t\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\"/>\r\n\t\t\t<Traveler>\r\n\t\t\t\t<Customer>\r\n\t\t\t\t\t<PersonName InformationText=\"Info\">\r\n\t\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Kowalski</SurName>\r\n\t\t\t\t\t</PersonName>\r\n\t\t\t\t\t<Telephone>\r\n\t\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t\t</Telephone>\r\n\t\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t\t</Customer>\r\n\t\t\t</Traveler>\r\n\t\t</Profile>\r\n\t</Filter>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.UniqueID;\r",
													"    const profileName = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.ProfileName;\r",
													"    pm.environment.set('profileId', filterId);\r",
													"    pm.environment.set('profileName', profileName);\r",
													"});\r",
													"\r",
													"console.log(\"Profile id : \"+pm.environment.get('profileId'))\r",
													"console.log(\"profileName : \"+pm.environment.get('profileName'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('profileId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Profile CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\">\r\n\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\" ProfileName=\"{{profileName}}\"/>\r\n\t\t<Traveler>\r\n\t\t\t<Customer BirthDate=\"1990-01-01\" GenderCode=\"M\">\r\n\t\t\t\t<PersonName>\r\n\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Smith</SurName>\r\n\t\t\t\t</PersonName>\r\n\t\t\t\t<Telephone>\r\n\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t</Telephone>\r\n\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t</Customer>\r\n\t\t\t<TPA_Extensions>\r\n\t\t\t\t<AssociatedFilters FilterID=\"{{filterId}}\" FilterName=\"{{filterName}}\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\"/>\r\n\t\t\t</TPA_Extensions>\r\n\t\t</Traveler>\r\n\t</Profile>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH) close session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('token')\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "1 - Shop, Price Check, Book, Cancel (NDC)",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"1\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"RPH\": \"2\",\n\t\t\t\t\"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 10\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. Offers Price /v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}\n"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/book/offer_price), [Resources](https://developer.sabre.com/docs/rest_apis/air/book/offer_price/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "3. createBooking - ProfileId",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\"\n\t\t}\n\t]\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "4. Cancel Booking /v1 Cancel All",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "3 - Air Shop, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"WAW\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "4 - Profiles, Air Shop, Book, Cancel",
					"item": [
						{
							"name": "0 - Create Profile",
							"item": [
								{
									"name": "0. SessionCreateRQ (Stateful ATH) create session and prepare vars Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Generate a unique ID for profile services\r",
													"var uuid = require('uuid');\r",
													"var myUUID = uuid();\r",
													"console.log(myUUID);\r",
													"\r",
													"//cleanup\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')\r",
													"\r",
													"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
													"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
													"\r",
													"console.log(pm.environment.get('filterName'))\r",
													"console.log(pm.environment.get('profileName'))\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Filter[0].$.FilterID;\r",
													"    pm.environment.set('filterId', filterId);\r",
													"});\r",
													"\r",
													"console.log(\"Filter id : \"+pm.environment.get('filterId'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('filterId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Filter CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\" FilterID=\"*\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" FilterName=\"{{filterName}}\" FilterTypeCode=\"TVL\">\r\n\t\t<Profile>\r\n\t\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\"/>\r\n\t\t\t<Traveler>\r\n\t\t\t\t<Customer>\r\n\t\t\t\t\t<PersonName InformationText=\"Info\">\r\n\t\t\t\t\t\t<GivenName>Pawel</GivenName>\r\n\t\t\t\t\t\t<SurName>Mrozicki</SurName>\r\n\t\t\t\t\t</PersonName>\r\n\t\t\t\t\t<Telephone>\r\n\t\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t\t</Telephone>\r\n\t\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t\t</Customer>\r\n\t\t\t</Traveler>\r\n\t\t</Profile>\r\n\t</Filter>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.UniqueID;\r",
													"    const profileName = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.ProfileName;\r",
													"    pm.environment.set('profileId', filterId);\r",
													"    pm.environment.set('profileName', profileName);\r",
													"});\r",
													"\r",
													"console.log(\"Profile id : \"+pm.environment.get('profileId'))\r",
													"console.log(\"profileName : \"+pm.environment.get('profileName'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('profileId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Profile CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\">\r\n\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\" ProfileName=\"{{profileName}}\"/>\r\n\t\t<Traveler>\r\n\t\t\t<Customer BirthDate=\"1990-01-01\" GenderCode=\"M\">\r\n\t\t\t\t<PersonName>\r\n\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Smith</SurName>\r\n\t\t\t\t</PersonName>\r\n\t\t\t\t<Telephone>\r\n\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t</Telephone>\r\n\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t</Customer>\r\n\t\t\t<TPA_Extensions>\r\n\t\t\t\t<AssociatedFilters FilterID=\"{{filterId}}\" FilterName=\"{{filterName}}\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\"/>\r\n\t\t\t</TPA_Extensions>\r\n\t\t</Traveler>\r\n\t</Profile>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH) close session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('token')\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "1 - Shop, Book, Cancel (ATPCO)",
							"item": [
								{
									"name": "0. REST Authorize ATK Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Shop (BFM)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"",
													"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"WAW\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. createBooking - ProfileId",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n\t\t},\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": 463,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"2021-03-30\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": 462,\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"2021-04-15\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t}\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "3. Cancel Booking /v1 Cancel All",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Conversation-ID",
												"type": "text",
												"value": "{{conv_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "5 - Air LCC Shop, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"STN\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"FR\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - LCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "6 - Air Shop, Book, Fulfill, Cancel + Void",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"TUL\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{ptrta}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"ExpireDate\": \"2024-10\",\n                                \"Number\": 4444333322221111\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Cancel Booking /v1 Cancel All + VOID tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "7 - Air Shop, Book, Fulfill, Void, Display, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"2\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"YVR\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"YYC\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n                \"MaxStopsQuantity\": 0, \n            \t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"AC\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Mrozicki\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"All\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{ptrta}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"ExpireDate\": \"2024-10\",\n                                \"Number\": 4444333322221111\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"ticket1\", jsonData.flightTickets[0].number);",
											"pm.environment.set(\"ticket2\", jsonData.flightTickets[1].number);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{ticket1}}\"\n      },\n      {\n        \"number\": \"{{ticket2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. Void Flight Tickets - with ALLOW_PARTIAL_CANCEL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n    \"{{ticket1}}\",\n    \"{{ticket2}}\"\n  ],\n  \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"  \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"voidFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "7. GetBooking  - Display Flight Tickets only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n    \"returnOnly\":\r\n  [ \"TICKETS\"]\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "8. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "8 - Air Shop, Book, Fulfill, Refund, Display, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"2\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SFO\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n                \"MaxStopsQuantity\": 0, \n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"01234567890\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"All\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{ptrta}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"ExpireDate\": \"2024-10\",\n                                \"Number\": 4444333322221111\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"ticket1\", jsonData.flightTickets[0].number);",
											"pm.environment.set(\"ticket2\", jsonData.flightTickets[1].number);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{ticket1}}\"\n      },\n      {\n        \"number\": \"{{ticket2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Refund Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{ticket1}}\"\n      },\n      {\n        \"number\": \"{{ticket2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"refundFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. GetBooking  - Display Flight Tickets only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n    \"returnOnly\":\r\n  [ \"TICKETS\"]\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "7. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "9 - Hotel Shop, Book,  Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Get Hotel Avail /v3.0.0",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"GetHotelAvailRQ\": {\r\n        \"SearchCriteria\": {\r\n            \"OffSet\": 1,\r\n            \"SortBy\": \"TotalRate\",\r\n            \"SortOrder\": \"ASC\",\r\n            \"PageSize\": 20,\r\n            \"TierLabels\": false,\r\n            \"GeoSearch\": {\r\n                \"GeoRef\": {\r\n                    \"Radius\": 200,\r\n                    \"UOM\": \"MI\",\r\n                    \"RefPoint\": {\r\n                        \"Value\": \"DFW\",\r\n                        \"ValueContext\": \"CODE\",\r\n                        \"RefPointType\": \"6\"\r\n                    }\r\n                }\r\n            },\r\n            \"RateInfoRef\": {\r\n                \"ConvertedRateInfoOnly\": false,\r\n                \"CurrencyCode\": \"USD\",\r\n                \"BestOnly\": \"2\",\r\n                \"PrepaidQualifier\": \"IncludePrepaid\",\r\n                \"StayDateRange\": {\r\n                    \"StartDate\": \"{{start_date}}\",\r\n                    \"EndDate\": \"{{end_date}}\"\r\n                },\r\n                \"Rooms\": {\r\n                    \"Room\": [\r\n                        {\r\n                            \"Index\": 1,\r\n                            \"Adults\": 2,\r\n                            \"Children\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"InfoSource\": \"100\"\r\n            },\r\n            \"HotelPref\": {\r\n                \"SabreRating\": {\r\n                    \"Min\": \"3\",\r\n                    \"Max\": \"5\"\r\n                }\r\n            },\r\n            \"ImageRef\": {\r\n                \"Type\": \"MEDIUM\",\r\n                \"LanguageCode\": \"EN\"\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/get/hotelavail",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"get",
										"hotelavail"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail), [Resources](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Hotel Price Check /v3.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"HotelPriceCheckRQ\": {\r\n    \"RateInfoRef\": {\r\n      \"RateKey\": \"{{rate_key}}\"\r\n    }\r\n  }\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/hotel/pricecheck",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"hotel",
										"pricecheck"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://beta.developer.sabre.com/docs/rest_apis/hotel/search/hotel_price_check), [Resources](https://beta.developer.sabre.com/docs/rest_apis/hotel/search/hotel_price_check/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"hotel\": {\n    \"useCsl\": true,\n    \"bookingKey\": \"{{booking_key}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": true,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"travelerIndices\": [\n          1,2\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2024-10\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"012154654\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. cancelBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "10 - Vehicle Shop, Book,  Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "0. SessionCreateRQ 1.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2021.01.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ returnContextID=\"true\" Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/session_management/create_session), [Resources](https://developer.sabre.com/docs/read/soap_apis/session_management/create_session/resources)</b>\n\n- SessionCreateRQ v1.0.0 is the traditional method for authentication & authorization of **Stateful Sabre SOAP APIs**. \n- v1.0.0 requires the standard authentication parameters: username, password, organization & domain (see [Password Management](https://developer.sabre.com/guides/travel-agency/developer-guides/password-management) if you need to reset your password).\n- SessionCreateRQ v2.0.0 has been enhanced to provide better logging/tracking by requiring 2 additional parameters: clientId + clientSecret (see [Client IDs](https://developer.sabre.com/guides/travel-agency/developer-guides/sabre-api-client-ids) for further references).\n- Be mindful of these differences when choosing which version to use.\n<br/><br/>\n*note:* The below example depicts a **v1.0.0** request where only the 4 standard security attributes are required. <br/>\nIf you have successfully imported the environment file associated with this collection, you will have the following variables available for you to add your credentials: _{{username}}_, _{{password}}_, _{{pcc}}_, _{{client_id}}_ & _{{client_secret}}_.<br/><br/>\nThe general script logic in this collection will take the values you define in these variables and will use them in the execution of this service.\nUpon successfull execution, the corresponding token will be stored in a _{{token}}_ variable and will be automatically used in subsequent API calls. With the goal of making your life easier :)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetVehAvailRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const xml2js = require('xml2js');\r",
											"\r",
											"// Parse response and remove namespaces (prefixes)\r",
											"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
											"const parseString = xml2js.parseString;\r",
											"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
											"\r",
											"parseString(responseBody, parseOptions, (err, result) => {\r",
											"    const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;\r",
											"    // const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].ConvertedVehRentalRate[0].$.RateKey;\r",
											"    pm.environment.set('carRateKey', rateKey);\r",
											"});\r",
											"\r",
											"console.log(\"Car Rate Key : \"+pm.environment.get('carRateKey'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"MIA\"/>\r\n            <ReturnLocation LocationCode=\"MCO\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "VehPriceCheckRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const xml2js = require('xml2js');\r",
											"\r",
											"// Parse response and remove namespaces (prefixes)\r",
											"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
											"const parseString = xml2js.parseString;\r",
											"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
											"\r",
											"parseString(responseBody, parseOptions, (err, result) => {\r",
											"    const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
											"    pm.environment.set('carBookingKey', bookingKey);\r",
											"});\r",
											"\r",
											"console.log(\"Car Booking Key : \"+pm.environment.get('carBookingKey'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n\r\n<VehPriceCheckRQ xmlns=\"http://services.sabre.com/car/pricecheck/v1_0_0\" version=\"1.0.0\">\r\n    <VehRateInfoRef RateKey=\"{{car_rate_key}}\"/>\r\n</VehPriceCheckRQ>\r\n\r\n\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 11\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"car\": {\n    \"bookingKey\": \"{{carBookingKey}}\"\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"4487971000000006\",\n        \"cardSecurityCode\": \"123\",\n        \"expiryDate\": \"2024-10\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. cancelBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Conversation-ID",
										"type": "text",
										"value": "{{conv_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"",
					"// Get the first string of the URI",
					"const URI = request.url.split(\"/\")[0];",
					"",
					"// Postman doesn't define a variable until the request is sent, therefore the URI is either:",
					"// {{rest_endpoint}}/xx/yy/zz or {{soap_endpoint}}",
					"",
					"",
					"// Capture today's date",
					"var moment = require('moment');",
					"// Add 30 days to today's date and use this date in start_date",
					"const today = moment().format(\"YYYY-MM-DD\");",
					"pm.environment.set('today', today);",
					"// Add 30 days to today's date and use this date in start_date",
					"const start_date = moment().add(30, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('start_date', start_date);",
					"// Add 37 days to today's date and use this date in end_date",
					"const end_date = moment().add(37, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('end_date', end_date);",
					"// Add 33 days to today's date and use this date in short_end_date (primarily for hotel search)",
					"const short_end_date = moment().add(33, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('short_end_date', short_end_date);",
					"",
					"pm.environment.set('conv_id', \"2021.01.DevStudio\");",
					"",
					"// Analyze 'token' variable, if it starts with \"ATH:\" this text is removed as it's not accepted by Sabre's 2SG gateways ",
					"var token = pm.variables.get('token');",
					"// Evaluate if token is defined or not null, and only then attempt to remove the ATH prefix",
					"if (token) {",
					"    pm.environment.set('token', token.replace(/^ATH:/, ''));",
					"}",
					"",
					"if ((URI) == ('{{soap_endpoint}}')) {",
					"",
					"    //***SOAP Path***//",
					"    //This means that the temp URL is: {{soap_endpoint}}",
					"",
					"    // Get service action code from request name and ignore the following prefixes if present:",
					"    // underscore (_)",
					"    // number & dot (1.)",
					"    // these variations are used in different examples across this collection",
					"    const action = request.name.split(' ')[0].replace(/^_|[0-9]./, '');",
					"",
					"",
					"    // Add the token value into the token variable",
					"    const token = pm.variables.get('token');",
					"",
					"    // Add the ApplicationId value into the AppId variable",
					"    const AppId = pm.variables.get('AppId');",
					"",
					"    // All SOAP API calls require a header section, we have created this variable to remove it from the \"working\" message and ensure the user can focus on the payload section ",
					"",
					"    const header_appid = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action><CustomerAppId xmlns:ns10=\"http://webservices.sabre.com/\">${AppId}</CustomerAppId></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken>${token}</BinarySecurityToken></Security></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"    const header_diag = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken>${token}</BinarySecurityToken></Security><Diagnostics xmlns=\"http://webservices.sabre.com\"/></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"    const header = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken EncodingType=\"Base64Binary\" valueType=\"String\">${token}</BinarySecurityToken></Security></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"",
					"",
					"    // Same as previous item, this footer variable is used to close the entire SOAP envelope",
					"    const footer = '</SOAP-ENV:Body></SOAP-ENV:Envelope>';",
					"",
					"    // Add header & footer variables into the specific variables",
					"    pm.variables.set('header_appid', header_appid);",
					"    pm.variables.set('header', header);",
					"    pm.variables.set('header_diag', header_diag);",
					"    pm.variables.set('footer', footer);",
					"",
					"",
					"} else if ((URI) == ('{{rest_endpoint}}')) {",
					"",
					"    //***REST Path***//",
					"    //This means that the temp URL is: {{rest_endpoint}}/xx/yy/zz",
					"",
					"    // Capture URI element which identifies the API method",
					"    const URI_ID = request.url.split(\"/\")[3];",
					"",
					"",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"            // Capture username",
					"            const username = pm.variables.get('username');",
					"            // Capture PCC",
					"            const pcc = pm.variables.get('pcc');",
					"",
					"            if ((request.url.split(\"/\")[1]) == ('v2')) {",
					"",
					"                // Construct raw client id (by appending V1:username:PCC:AA)",
					"                const clientidRaw = `V1:${username}:${pcc}:AA`;",
					"                // Base64 encode the previous string",
					"                const clientidArray = CryptoJS.enc.Utf8.parse(clientidRaw);",
					"                const clientidBase64 = CryptoJS.enc.Base64.stringify(clientidArray);",
					"                // Capture password",
					"                const passwordRaw = pm.variables.get('password');",
					"                // Base64 enconde the password",
					"                const passwordArray = CryptoJS.enc.Utf8.parse(passwordRaw);",
					"                const passwordBase64 = CryptoJS.enc.Base64.stringify(passwordArray);",
					"                // Combine the two previous strings with a : in the middle",
					"                const secretRaw = `${clientidBase64}:${passwordBase64}`;",
					"                // Base64 enconde this last string",
					"                const secretArray = CryptoJS.enc.Utf8.parse(secretRaw);",
					"                const secretBase64 = CryptoJS.enc.Base64.stringify(secretArray);",
					"                // Set the secret variable with the latest encoded string",
					"                pm.environment.set('secret', secretBase64);",
					"                pm.environment.set('token', \"\");",
					"",
					"            } else {",
					"                // Assumption is that this is /v3/auth/token or higher version",
					"                // Catpure client ID",
					"                const client_id = pm.variables.get('client_id');",
					"                // Capture client secret",
					"                const client_secret = pm.variables.get('client_secret');",
					"                // Combine client_id + client_secret (by appending client_id:client_secret)",
					"                const clientIDClientSecret = `${client_id}:${client_secret}`;",
					"                // Base64 encode the previous string",
					"                const clientIDClientSecretArray = CryptoJS.enc.Utf8.parse(clientIDClientSecret);",
					"                const clientIDClientSecretBase64 = CryptoJS.enc.Base64.stringify(clientIDClientSecretArray);",
					"                // Set the secret variable with the latest encoded string",
					"                pm.environment.set('auth_secret', clientIDClientSecretBase64);",
					"                pm.environment.set('token', \"\");   ",
					"            }",
					"",
					"            break;",
					"",
					"        case 'shop':",
					"",
					"            break;",
					"    }",
					"}",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"// Logic to ensure that any potential / at the end of the request url would not impact the matching logic to determine if a request is being sent to Sabre's REST or SOAP endpoint.",
					"// Some Postman versions automatically append a / at the end of the request url, so if identified it gets removed",
					"var requestURL = request.url;",
					"if (requestURL.charAt(requestURL.length-1) == \"/\") {",
					"    requestURL = requestURL.substring(0, requestURL.length - 1);",
					"}",
					"",
					"// Only execute the following code for SOAP APIs (based on the endpoint being used)",
					"if (((request.url) == (pm.environment.get(\"soap_endpoint\"))) || ((requestURL) == (pm.environment.get(\"soap_endpoint\")))){",
					"",
					"    //***SOAP Path***//",
					"",
					"    const xml2js = require('xml2js');",
					"",
					"    // Get service action name from request name and ignore leading underscore if present",
					"    const action = request.name.split(' ')[0].replace(/^_/, '');",
					"",
					"    // Parse response and remove namespaces (prefixes)",
					"    // Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs",
					"    const parseString = xml2js.parseString;",
					"    const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };",
					"",
					"    switch (action) {",
					"        case 'SessionCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"                pm.environment.set('token', \"\");",
					"                pm.environment.set('token', token);",
					"            });",
					"            break;",
					"        case 'TokenCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"                pm.environment.set('token', \"\");",
					"                pm.environment.set('token', token);",
					"            });",
					"            break;",
					"        case 'ContextChangeLLSRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Body[0].ContextChangeRS[0].SecurityToken[0];",
					"                if ((token.$.Updated) == ('true')) {",
					"                    pm.environment.set('token', \"\");",
					"                    pm.environment.set('token', token._);",
					"                }",
					"            });",
					"            break;",
					"        case 'CreatePassengerNameRecordRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const pnr = result.Envelope.Body[0].CreatePassengerNameRecordRS[0].ItineraryRef[0].$.ID;",
					"                pm.environment.set('pnr', pnr);",
					"            });",
					"            break;",
					"        case 'EnhancedEndTransactionRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;",
					"                pm.environment.set('pnr', pnr);",
					"            });",
					"            break;",
					"        case 'AirTicketRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const summary = result.Envelope.Body[0].AirTicketRS[0].Summary;",
					"                summary.forEach((tktDoc, i) => {",
					"                    const tktNum = 'tkt' + (i === 0 ? '' : i + 1);",
					"                    const tktDateTime = tktDoc.LocalIssueDateTime[0];",
					"                    const tktDate = tktDateTime.substring(tktDateTime, tktDateTime.indexOf('T'));",
					"                    pm.environment.set(tktNum, tktDoc.DocumentNumber[0]);",
					"                    pm.environment.set(tktNum + '_date', tktDate);",
					"                });",
					"            });",
					"            break;",
					"        case 'TP_CreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalID = result.Envelope.Body[0].TP_CreateRS[0].$.proposalID;",
					"                pm.environment.set('proposal_id', proposalID);",
					"            });",
					"            break;",
					"        case 'TP_ReadRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_ReadRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'TP_RefreshRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_RefreshRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'GetHotelAvailRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const hotelCode = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelInfo[0].$.HotelCode;",
					"                pm.environment.set('hotel_code', hotelCode);",
					"            });",
					"            break;",
					"        case 'GetHotelDetailsRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const rateKey = result.Envelope.Body[0].GetHotelDetailsRS[0].HotelDetailsInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;",
					"                pm.environment.set('rate_key', rateKey);",
					"            });",
					"            break;",
					"        case 'HotelPriceCheckRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;",
					"                pm.environment.set('booking_key', bookingKey);",
					"            });",
					"            break;",
					"        case 'GetVehAvailRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;",
					"                pm.environment.set('car_rate_key', rateKey);",
					"            });",
					"            break;",
					"        case 'VehPriceCheckRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;",
					"                pm.environment.set('car_bookingKey', bookingKey);",
					"            });",
					"            break;",
					"            ///soap-env:Envelope/soap-env:Body/ns9:GetVehRateDetailsRS/ns9:RateDetailsInfo/ns9:VehRateInfo/@PickUpDate",
					"        case 'GetVehRateDetailsRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const carPickUpDate = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.PickUpDate;",
					"                const carPickUpTime = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.PickUpTime;",
					"                const carPickUpLocation = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].PickUpLocation[0].$.LocationCode;",
					"                const carReturnDate = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.ReturnDate;",
					"                const carReturnTime = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.ReturnTime;",
					"                const carReturnLocation = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].ReturnLocation[0].$.LocationCode;",
					"                const carVehicleType = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].Vehicle[0].$.VehType;",
					"                const carRateCode = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.RateCode;",
					"                const carVendorCode = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].Vendor[0].$.Code;",
					"                pm.environment.set('car_pick_up_date', carPickUpDate);",
					"                pm.environment.set('car_pick_up_time', carPickUpTime);",
					"                pm.environment.set('car_pick_up_location', carPickUpLocation);",
					"                pm.environment.set('car_return_date', carReturnDate);",
					"                pm.environment.set('car_return_time', carReturnTime);",
					"                pm.environment.set('car_return_location', carReturnLocation);",
					"                pm.environment.set('car_vehicle_type', carVehicleType);",
					"                pm.environment.set('car_rate_code', carRateCode);",
					"                pm.environment.set('car_vendor_code', carVendorCode);",
					"            });",
					"            break;",
					"        // Add new API here",
					"    }",
					"",
					"",
					"} else {",
					"",
					"    //***REST Path***//",
					"",
					"    // Get the Unique ID of the URI (token, shop, price, create, view, cancel, change) based on the \"5th\" string in order to identify the actual API",
					"    const URI_ID = request.url.split(\"/\")[5];",
					"",
					"    // Get the JSON response",
					"    const jsonData = JSON.parse(responseBody);",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"            pm.environment.set('token', jsonData.access_token);",
					"            break;",
					"        case 'shop':",
					"            pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
					"            //pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
					"            pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
					"            break;",
					"        case 'price':",
					"            pm.environment.set('price_offer_id', jsonData.response.offers[0].id);",
					"            pm.environment.set('price_offer_item_id', jsonData.response.offers[0].offerItems[0].id);",
					"            pm.environment.set('price_passenger_id', jsonData.response.offers[0].offerItems[0].passengers[0].id);",
					"            break;",
					"        case 'create':",
					"            pm.environment.set('sabre_order_id', jsonData.order.id);",
					"            pm.environment.set('pnr', jsonData.order.pnrLocator);",
					"            break;",
					"        case 'hotelavail':",
					"            pm.environment.set('hotel_code', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelInfo.HotelCode);",
					"            pm.environment.set('rate_key', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'hoteldetails':",
					"            pm.environment.set('rate_key', jsonData.GetHotelDetailsRS.HotelDetailsInfo.HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'pricecheck':",
					"            pm.environment.set('booking_key', jsonData.HotelPriceCheckRS.PriceCheckInfo.BookingKey);",
					"            break;",
					"        case 'records?mode=create':",
					"            pm.environment.set('pnr', jsonData.CreatePassengerNameRecordRS.ItineraryRef.ID);",
					"            break;",
					"        case 'orders':",
					"            if ((request.url.split(\"/\")[6]) == ('createBooking')) {",
					"                pm.environment.set('pnr', jsonData.confirmationId);",
					"            };",
					"",
					"            break;",
					"    }",
					"}",
					"",
					""
				]
			}
		}
	]
}